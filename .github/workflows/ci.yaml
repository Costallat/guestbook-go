name: Demo CI

on:   
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

  # Run CI for any PRs.
  pull_request:

  # Run manually.
  workflow_dispatch:

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    outputs:
      version: ${{ steps.variables.outputs.version }}
      registry: ${{ steps.variables.outputs.registry }}

    steps:
      - uses: actions/checkout@v2

      - name: Set variables
        id: variables
        run: |
          version=manual-${GITHUB_RUN_ID}
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            version=pr-${{ github.event.number }}-${GITHUB_RUN_ID}
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            version=$(<VERSION)
          fi

          echo "::set-output name=version::${version}"
          echo "::set-output name=registry::ghcr.io/${{ github.repository_owner }}"

      - name: Build image
        env:
          VERSION: ${{ steps.variables.outputs.version }}
          REGISTRY: ${{ steps.variables.outputs.registry }}
        run: |
          make build

      - name: Log in to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        env:
          VERSION: ${{ steps.variables.outputs.version }}
          REGISTRY: ${{ steps.variables.outputs.registry }}
        run: |
          make push

  trigger-deployment:
    needs: build-image
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository_owner }}/guestbook-go-config
          token: ${{ secrets.CONFIG_GITHUB_TOKEN }}

      - name: Setup argocd-util
        run: |
          curl -L -o argocd-util "https://github.com/argoproj/argo-cd/releases/download/v2.0.5/argocd-util-linux-amd64"
          chmod +x argocd-util

      - name: Create new env for PR
        run: |
          app_name="guestbook-pr-${{ github.event.number }}"
          app_file="apps/${app_name}.yaml"

          ./argocd-util app generate-spec ${app_name} \
            --project default \
            --repo https://github.com/${{ github.repository_owner }}/guestbook-go-config \
            --path overlays/pr \
            --dest-namespace ${app_name} \
            --dest-server https://kubernetes.default.svc \
            --sync-policy automated \
            --auto-prune \
            --self-heal \
            --sync-option CreateNamespace=true \
            --kustomize-image guestbook-image=ghcr.io/${{ github.repository_owner }}/guestbook:${{ needs.build-image.outputs.version }} \
          > ${app_file}

          needs_commit=$(git diff --quiet HEAD ${app_file} || echo "true")

          if [[ "${needs_commit}" == "true" ]]; then
            git config user.email "guestbook-go-ci@example.com"
            git config user.name "guestbook-go CI"

            git add ${app_file}
            git commit -m "Add new app ${app_name}"
            git push origin main
          fi
